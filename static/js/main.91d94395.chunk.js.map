{"version":3,"sources":["assets/reports/design.pdf","assets/reports/proposal.pdf","assets/img/profile_pics/javid.jpeg","assets/img/profile_pics/anar.jpeg","assets/img/profile_pics/leylah.jpeg","assets/img/profile_pics/leylai.jpeg","pages/landing/reports/index.js","pages/landing/header/index.tsx","pages/landing/about/styles.ts","pages/landing/about/index.tsx","shared/colors/index.ts","pages/landing/team/styles.ts","pages/landing/team/index.tsx","shared/styles/index.ts","shared/models/user.ts","shared/libs/cache.ts","pages/app/home/main/main-header/index.tsx","pages/app/home/main/friends-page/index.tsx","shared/models/media-product.ts","shared/models/channel.ts","pages/app/home/main/channels/index.tsx","pages/app/home/main/profile/index.tsx","pages/app/home/main/movie-page/index.tsx","pages/app/home/main/series-page/index.tsx","pages/app/home/main/index.tsx","pages/app/home/company-main/company-default/index.tsx","pages/app/home/company-main/company-header/index.tsx","pages/app/home/company-main/profile-page/index.tsx","shared/models/genre.ts","shared/libs/media-service.ts","pages/app/home/company-main/upload-page/index.tsx","shared/models/episode.ts","pages/app/home/company-main/upload-page/episode-upload/index.tsx","pages/app/home/company-main/index.tsx","pages/app/home/index.tsx","pages/app/login/index.tsx","pages/app/register/index.tsx","shared/components/media/index.tsx","pages/app/channel/index.tsx","shared/models/comment.ts","shared/models/watch.ts","pages/app/home/main/product-details/index.tsx","pages/app/home/main/watch/index.tsx","pages/app/suggestions/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","Reports","id","className","href","proposal","design","Header","props","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","styles","infoTextContainer","flexDirection","display","flexWrap","flex","marginRight","marginLeft","infoText","fontSize","textAlign","About","style","APP_COLORS","profileContainer","width","height","backgroundColor","margin","padding","imageContainer","container","justifyContent","Team","Container","src","require","APP_STYLES","headerStyle","color","UserBase","details","type","username","email","this","User","birthday","fullname","Date","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","date_ob","slice","getHours","getMinutes","getSeconds","CompanyUser","name","Cache","user","localStorage","setItem","JSON","stringify","removeItem","currentUser","getItem","curUser","parse","paddingLeft","paddingRight","paddingTop","button","alignSelf","borderWidth","textDecoration","alignItems","nameButton","MainHeader","changeState","history","useHistory","outline","fontWeight","onClick","Button","DropdownButton","variant","title","getCurrentUser","Dropdown","Item","replace","friends","boxShadow","request","Friends","useState","setFriends","newFriend","setNewFriend","requestResult","setRequestResult","requestError","setRequestError","requestLoading","receivedRequests","setReceived","useEffect","options","method","headers","fetch","then","res","json","result","data","success","console","log","map","friend","placeholder","onChange","e","target","value","maxLength","borderRadius","find","from","to","body","failed","setTimeout","disabled","username1","username2","curFriends","unshift","curRequests","filter","acceptRequest","deleteRequest","MediaProduct","_id","score","release_date","thumbnail_url","description","publisher","m_id","Math","random","mp_name","Channel","medias","channel_id","c_name","m","channelContainer","maxHeight","channelName","thumbnailStyle","continueWatch","Channels","channels","setChannels","lastMovie","setLastMovie","search","setSearch","setChannelName","setChannelError","updateScreen","setUpdateScreen","onMoviePressed","media","channel","forEach","curChannels","findIndex","c","catch","err","Form","Row","Group","as","Col","InputGroup","Prepend","Text","Control","onSubmit","key","push","onChannelPressed","Profile","n","s","split","setName","surname","setSurname","setUsername","password","setPassword","setResult","controlId","Label","event","new_username","Movie","movies","setMovies","allMovies","movie","Series","allSeries","setSeries","series","serie","Main","state","setState","big_container","borderColor","fontStyle","movie_button","Default","changeMedia","products","setProducts","enableButton","setUpload","handleUpload","showDialog","setShowDialog","handleClose","Modal","show","onHide","backdrop","keyboard","Body","htmlFor","Footer","marginTop","CompanyHeader","logoutUser","Genre","MediaService","genre1","genre2","genre3","genre4","genre5","genre6","genre7","genre8","genre9","genre10","genre11","genre12","genre13","genres","isMovie","mediatype","formGroup","maxWidth","Upload","setRelease","setProduct","count","setButton","handleButton","mediaProduct","getGenres","uploaded","setUploaded","genreStates","setGenreStates","genre","checked","sm","index","minWidth","Check","label","formatDate","Episode","season_number","episode_number","UploadEpisode","episode_name","s_number","setSeason","e_number","setEpisode","file","setFile","window","location","reload","episode","MainCompany","mediaType","setMediaType","backgroundImage","headerContainer","header","sloganContainer","slogan","Home","isUserLoggedIn","isCompanyUser","position","top","right","overflow","paddingBottom","innerContainer","marginHorizontal","borderStyle","blackText","contentContainer","nextButton","Login","userType","setUserType","error","setError","companyInputRef","useRef","individualInputRef","setChecked","option","login","setCurrenUser","ref","border","defaultChecked","Register","currentStage","setCurrentStage","setBirthday","setEmail","finalizeRegistration","preffered_genres","genreState","contents","companyUser","min","max","renderInner","Media","ChannelPage","currentChannel","setChannel","channelLoading","setChannelLoading","mediasLoading","setMediasLoading","match","params","Spinner","animation","marginBottom","Comment","comment_id","replied_to","comment_date","c_content","reply_to","WatchStatus","watch_date","watch_count","MovieDetails","setShow","setMovie","comment_content","setContent","comments","setComments","commentError","setCommentError","found","setFound","watchStatus","setWatchStatus","firstWatch","setFirstWatch","replyTo","setReplyTo","replyToUser","setReplyToUser","replyContent","setReplyContent","likeMovie","dislikeMovie","commentMovie","comment","commentObj","curComments","update","code","product","formatDateHours","watch","replyMovie","Watch","message","setMessage","ProgressBar","now","Suggestions","channelID","setChannelID","selfChannel","mediaProduct1","mediaProduct2","mediaProduct3","channel2","App","excat","path","component","exact","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91d94395.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/design.6526715b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/proposal.e31a3f9c.pdf\";","module.exports = __webpack_public_path__ + \"static/media/javid.858bb308.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/anar.4117ab05.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/leylah.d6ef3311.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/leylai.0da26d82.jpeg\";","import React from \"react\";\r\nimport design from \"../../../assets/reports/design.pdf\";\r\nimport proposal from \"../../../assets/reports/proposal.pdf\";\r\n\r\nfunction Reports() {\r\n\treturn (\r\n\t\t<div id=\"reports\" className=\"container\">\r\n\t\t\t<h1>Reports</h1>\r\n\t\t\t<a href={proposal}>Proposal Report</a>\r\n\t\t\t<br />\r\n\t\t\t<a href={design}>Design Report</a>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Reports;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\ninterface HeaderProps {\r\n\r\n}\r\n\r\nfunction Header(props: HeaderProps): JSX.Element {\r\n    return (\r\n        <Navbar className='justify-content-between' bg=\"light\" expand='md'>\r\n            <Navbar.Brand href=\"./\">\r\n                <h1>\r\n                    Watchflix\r\n                </h1>\r\n            </Navbar.Brand>\r\n            <div>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/app\">Go To App</Nav.Link>\r\n                        <Nav.Link href=\"#about\">About</Nav.Link>\r\n                        <Nav.Link href=\"#reports\">Reports</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import { CSSProperties } from 'react';\r\nconst infoTextContainer: CSSProperties = {\r\n    flexDirection: 'row',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    marginRight: 20,\r\n    marginLeft: 20,\r\n}\r\n\r\nconst infoText: CSSProperties = {\r\n    fontSize: 24,\r\n    textAlign: 'justify'\r\n}\r\n\r\n// some inline styling props\r\nconst styles = { infoTextContainer, infoText }\r\nexport default styles","import React from 'react';\r\n\r\nimport styles from './styles';\r\n\r\nfunction About(): JSX.Element {\r\n\r\n    return (\r\n        <div id=\"about\" className=\"container\">\r\n            <div className=\"infoText\" style={styles.infoTextContainer}>\r\n                <h1>About</h1>\r\n                <p style={styles.infoText}>\r\n                    Watchflix is\r\n                    going to provide a variety of functionalities for the users. The main aim of this application is to\r\n                    provide users with the latest high-quality movies and series. The user will be able to enjoy\r\n                    his/her favorite movies and series smoothly. The application will have features like listing and\r\n                    searching movies and series based on their genre or name. It will also be available for the users\r\n                    to specify their preferences based on the genre. Then, this application will prepare suggestions\r\n                    based on the preferences of the user for the better user experience. Besides, like, dislike and\r\n                    3\r\n                    comment functionalities will be provided so that the users can give feedback to films and series\r\n                    they watched.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About;","export default {\r\n    greens: {\r\n        pastelGreen: '#5CDB59',\r\n        magicMint: '#84EEAF',\r\n        lochinvar: '#379683',\r\n        loafer: '#EDF5E1'\r\n    },\r\n    blues: {\r\n        catalinaBlue: '#05396B'\r\n    },\r\n    greys: {\r\n        porcelain: '#F1F3F4'\r\n    }\r\n}\r\n\r\nexport const APP_COLORS = {\r\n    red: '#660000',\r\n    lightRed:'#e50914',\r\n    darkGray:'#444444',\r\n    inputBorderGray: '#CED4DA',\r\n    inputPlaceholder:'#6C757D'\r\n}","import { CSSProperties } from 'react';\r\nimport colors from '../../../shared/colors';\r\nconst container: CSSProperties = {\r\n    flexDirection: 'row',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    justifyContent: 'center'\r\n}\r\nconst profileContainer: CSSProperties = {\r\n    width: 300,\r\n    height: 250,\r\n    backgroundColor: colors.greys.porcelain,\r\n    margin: 10,\r\n    padding: 10,\r\n}\r\n\r\nconst imageContainer: CSSProperties = {\r\n    width: 75,\r\n    height: 75,\r\n    margin: 10\r\n}\r\n\r\n// some inline styling props\r\nconst styles = { profileContainer, imageContainer, container }\r\nexport default styles","import React from 'react';\r\nimport styles from './styles';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction Team(): JSX.Element {\r\n\r\n    return (\r\n        <Container className='d-flex flex-sm-wrap'>\r\n            {/* <Row className='d-flex flex-wrap'> */}\r\n            <div style={styles.profileContainer}>\r\n                <img src={require('../../../assets/img/profile_pics/javid.jpeg')} style={styles.imageContainer} />\r\n                Javid Haji-zada\r\n             </div>\r\n            <div style={styles.profileContainer}>\r\n                <img src={require('../../../assets/img/profile_pics/anar.jpeg')} style={styles.imageContainer} />\r\n                Anar Huseynov\r\n            </div>\r\n            <div style={styles.profileContainer}>\r\n                <img src={require('../../../assets/img/profile_pics/leylah.jpeg')} style={styles.imageContainer} />\r\n                Leyla Hashimli\r\n            </div>\r\n            <div style={styles.profileContainer}>\r\n                <img src={require('../../../assets/img/profile_pics/leylai.jpeg')} style={styles.imageContainer} />\r\n                Leyla Ismayilova\r\n            </div>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default Team;","import { APP_COLORS } from \"../colors\";\r\n\r\nexport const APP_STYLES = {\r\n  headerStyle: {\r\n    color: APP_COLORS.lightRed,\r\n    fontSize: 32,\r\n  },\r\n};\r\n","abstract class UserBase {\r\n    type: UserType;\r\n    username: string;\r\n    email: string;\r\n\r\n    constructor(details?: any) {\r\n        this.type = details.type\r\n        this.username = details.username\r\n        this.email = details.email\r\n    }\r\n}\r\n\r\nexport class User extends UserBase {\r\n    birthday: Date;\r\n    fullname: string;\r\n    constructor(details?: any) {\r\n        super(details)\r\n        this.birthday = new Date(details.birthday)\r\n        this.fullname = details.fullname\r\n    }\r\n\r\n    static formatDate(date: Date): string {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    static formatDateHours(date_ob: Date): string {\r\n        // adjust 0 before single digit date\r\n        let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n\r\n        // current month\r\n        let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n\r\n        // current year\r\n        let year = date_ob.getFullYear();\r\n\r\n        // current hours\r\n        let hours = date_ob.getHours();\r\n\r\n        // current minutes\r\n        let minutes = date_ob.getMinutes();\r\n\r\n        // current seconds\r\n        let seconds = date_ob.getSeconds();\r\n        return year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\r\n    }\r\n}\r\nexport class CompanyUser extends UserBase {\r\n    name: string\r\n    constructor(details?: any) {\r\n        super(details)\r\n        this.name = details.name\r\n    }\r\n}\r\n\r\nexport type UserType = \"company\" | \"individual\"","import { CompanyUser, User } from \"../models/user\";\r\n\r\nexport class Cache {\r\n\r\n    static setCurrenUser(user: User | CompanyUser): void {\r\n        localStorage.setItem('currentUser', JSON.stringify(user))\r\n    }\r\n\r\n    static logoutUser(): void {\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n\r\n    static getCurrentUser(): User | CompanyUser | undefined {\r\n        let currentUser = localStorage.getItem('currentUser')\r\n        if (currentUser != null) {\r\n            let curUser = JSON.parse(currentUser || '')\r\n            if (curUser != null) {\r\n                if (curUser.type == 'individual') {\r\n                    return new User(curUser)\r\n                } else {\r\n                    return new CompanyUser(curUser)\r\n                }\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n}","import React from \"react\";\r\nimport { Button, ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { MainState } from \"../index\";\r\nimport { APP_STYLES } from \"../../../../../shared/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\n\r\ninterface MainHeaderProps {\r\n  changeState: (state: MainState) => void;\r\n}\r\n\r\nfunction MainHeader(props: MainHeaderProps): JSX.Element {\r\n  const { changeState } = props;\r\n  const history = useHistory()\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <button style={{ outline: 'none', backgroundColor: 'transparent', borderWidth: 0 }}>\r\n          <h1\r\n            style={{\r\n              ...APP_STYLES.headerStyle,\r\n              fontWeight: \"bold\",\r\n              height: 40,\r\n            }}\r\n            onClick={() => {\r\n              changeState(\"default\");\r\n            }}\r\n          >\r\n            Watchflix\r\n        </h1>\r\n        </button>\r\n        <Button\r\n          style={styles.button}\r\n          onClick={() => {\r\n            changeState(\"series\");\r\n          }}\r\n        >\r\n          <u>Series</u>\r\n        </Button>\r\n        <Button\r\n          style={styles.button}\r\n          onClick={() => {\r\n            changeState(\"movies\");\r\n          }}\r\n        >\r\n          <u>Movies</u>\r\n        </Button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          height: 40,\r\n        }}\r\n      >\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          className=\".transparent-button\"\r\n          style={styles.nameButton}\r\n          id=\"dropdown-basic-button\"\r\n          title={Cache.getCurrentUser()?.username} /** TODO: change into user.fullname */\r\n        >\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              changeState(\"friends\");\r\n            }}\r\n          >\r\n            My friends\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              changeState(\"groups\");\r\n            }}\r\n          >\r\n            Join Group\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              changeState(\"profile\");\r\n            }}\r\n          >\r\n            Profile\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onClick={() => {\r\n            localStorage.removeItem('currentUser')\r\n            history.replace('/app')\r\n          }}>Log out</Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#141414\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  button: {\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    textDecoration: \"underline\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  nameButton: {\r\n    backgroundColor: \"transparent\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n};\r\n\r\nexport default MainHeader;\r\n","import { wrap } from \"module\";\r\nimport React, { HTMLAttributes, useEffect, useState } from \"react\";\r\nimport { Button, ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { FaUserAlt, FaUserPlus, FaUserMinus } from \"react-icons/fa\";\r\nimport { BsChevronDoubleRight } from \"react-icons/bs\";\r\nimport { User, UserType } from \"../../../../../shared/models/user\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\n\r\n//import { APP_STYLES } from \"../../../../shared/styles\";\r\nfunction Friends(): JSX.Element {\r\n\tconst [friends, setFriends] = useState<User[]>([]);\r\n\tconst [newFriend, setNewFriend] = useState(\"\");\r\n\tconst [requestResult, setRequestResult] = useState(\"\");\r\n\tconst [requestError, setRequestError] = useState(\"\");\r\n\tconst [requestLoading, setRequestLoading] = useState(\"\");\r\n\tconst [receivedRequests, setReceived] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(Cache.getCurrentUser()){\r\n\t\tconst options: RequestInit = {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t};\r\n\t\tfetch(\r\n\t\t\t`http://localhost:5000/received_requests/${\r\n\t\t\t\tCache.getCurrentUser()?.username\r\n\t\t\t}`,\r\n\t\t\toptions\r\n\t\t).then((res) => {\r\n\t\t\tres.json().then((result) => {\r\n\t\t\t\tsetReceived(result.data);\r\n\t\t\t});\r\n\t\t});\r\n\t\tfetch(\r\n\t\t\t`http://localhost:5000/friends/${Cache.getCurrentUser()?.username}`,\r\n\t\t\toptions\r\n\t\t).then((res) => {\r\n\t\t\tres.json().then((result) => {\r\n\t\t\t\tif (result.success) {\r\n\t\t\t\t\tconsole.log(\"friends \", result.data);\r\n\t\t\t\t\tlet friends = result.data.map((friend: any) => new User(friend));\r\n\t\t\t\t\tsetFriends(friends);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t}, []);\r\n\r\n\tfunction sendFriendRequest() {\r\n\t\tif (friends.find((friend) => friend.username == newFriend)) {\r\n\t\t\tsetRequestError(\"User is already your friend\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet request = {\r\n\t\t\tfrom: Cache.getCurrentUser()?.username,\r\n\t\t\tto: newFriend,\r\n\t\t};\r\n\t\tconst options: RequestInit = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t};\r\n\t\tsetNewFriend(\"\");\r\n\t\tfetch(\"http://localhost:5000/send_request\", options).then((res) => {\r\n\t\t\tres.json().then((result) => {\r\n\t\t\t\tconsole.log(\"res \", result);\r\n\t\t\t\tif (result.failed) {\r\n\t\t\t\t\tsetRequestError(result.failed);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetRequestResult(result.success);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetRequestResult(\"\");\r\n\t\t\t\t\t}, 1500);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tfunction acceptRequest(username: string) {\r\n\t\tlet request = {\r\n\t\t\tusername1: username,\r\n\t\t\tusername2: Cache.getCurrentUser()?.username,\r\n\t\t};\r\n\t\tconst options: RequestInit = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t};\r\n\t\tsetNewFriend(\"\");\r\n\t\tfetch(\"http://localhost:5000/accept_request\", options).then((res) => {\r\n\t\t\tres.json().then((result) => {\r\n\t\t\t\tconsole.log(\"res \", result);\r\n\t\t\t\tif (result.failed) {\r\n\t\t\t\t\tsetRequestError(result.failed);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfetch(`http://localhost:5000/user/${username}`, {\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\t\t\t}).then((res) => {\r\n\t\t\t\t\t\tres.json().then((result) => {\r\n\t\t\t\t\t\t\tif (result.failed) {\r\n\t\t\t\t\t\t\t\tsetRequestError(result.failed);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(\"result \", result.data);\r\n\t\t\t\t\t\t\t\tlet user = new User(result.data);\r\n\t\t\t\t\t\t\t\tlet curFriends = friends;\r\n\t\t\t\t\t\t\t\tcurFriends.unshift(user);\r\n\t\t\t\t\t\t\t\tlet curRequests = receivedRequests.filter(\r\n\t\t\t\t\t\t\t\t\t(request: any) =>\r\n\t\t\t\t\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\t\t\t\t\trequest.username1 == username &&\r\n\t\t\t\t\t\t\t\t\t\t\trequest.username2 == Cache.getCurrentUser()?.username\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tsetReceived(curRequests);\r\n\t\t\t\t\t\t\t\tsetFriends(curFriends);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tfunction deleteRequest(username: string) {\r\n\t\tlet request = {\r\n\t\t\tusername1: username,\r\n\t\t\tusername2: Cache.getCurrentUser()?.username,\r\n\t\t};\r\n\t\tconst options: RequestInit = {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t};\r\n\t\tsetNewFriend(\"\");\r\n\t\tfetch(\"http://localhost:5000/remove_request\", options).then((res) => {\r\n\t\t\tres.json().then((result) => {\r\n\t\t\t\tconsole.log(\"res \", result);\r\n\t\t\t\tif (result.failed) {\r\n\t\t\t\t\tsetRequestError(result.failed);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfetch(`http://localhost:5000/user/${username}`, {\r\n\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\t\t\t}).then((res) => {\r\n\t\t\t\t\t\tres.json().then((result) => {\r\n\t\t\t\t\t\t\tif (result.failed) {\r\n\t\t\t\t\t\t\t\tsetRequestError(result.failed);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log(\"result \", result.data);\r\n\t\t\t\t\t\t\t\tlet user = new User(result.data);\r\n\t\t\t\t\t\t\t\tlet curRequests = receivedRequests.filter(\r\n\t\t\t\t\t\t\t\t\t(request: any) =>\r\n\t\t\t\t\t\t\t\t\t\t!(\r\n\t\t\t\t\t\t\t\t\t\t\trequest.username1 == username &&\r\n\t\t\t\t\t\t\t\t\t\t\trequest.username2 == Cache.getCurrentUser()?.username\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tsetReceived(curRequests);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<div style={{ flex: 1, fontSize: 24, color: \"white\" }}>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\talignSelf: \"flex-end\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"flex-end\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Enter friend to add\"\r\n\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\tsetRequestError(\"\");\r\n\t\t\t\t\t\tsetNewFriend(e.target.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tvalue={newFriend}\r\n\t\t\t\t\tmaxLength={24}\r\n\t\t\t\t\tstyle={{ marginRight: 8, borderRadius: 6 }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={sendFriendRequest}\r\n\t\t\t\t\tdisabled={newFriend == \"\"}\r\n\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd friend\r\n\t\t\t\t\t{requestLoading && <div>loading</div>}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\talignSelf: \"flex-end\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: \"flex-end\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{requestError && <p style={{ color: \"red\" }}>{requestError}</p>}\r\n\t\t\t\t{requestResult && <p style={{ color: \"red\" }}>{requestResult}</p>}\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\t<div>\r\n\t\t\t\t\tPending Requests\r\n\t\t\t\t\t{!receivedRequests || receivedRequests.length == 0 ? (\r\n\t\t\t\t\t\t<h1 style={{ color: \"red\" }}>No pending request</h1>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\treceivedRequests.map((request: any) => (\r\n\t\t\t\t\t\t\t<div style={{ ...styles.request }}>\r\n\t\t\t\t\t\t\t\t<button onClick={() => acceptRequest(request.username1)}>\r\n\t\t\t\t\t\t\t\t\t<FaUserPlus\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"transparent\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<p style={{ fontSize: \"24px\", color: \"white\" }}>\r\n\t\t\t\t\t\t\t\t\t{request.username1}\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<button onClick={() => deleteRequest(request.username1)}>\r\n\t\t\t\t\t\t\t\t\t<FaUserMinus\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: \"transparent\" }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<BsChevronDoubleRight /> Friends\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{friends.map((user) => (\r\n\t\t\t\t\t<div style={{ ...styles.friends }}>\r\n\t\t\t\t\t\t<FaUserAlt />\r\n\t\t\t\t\t\t<p style={{ fontSize: \"24px\", color: \"white\", marginLeft: 8 }}>\r\n\t\t\t\t\t\t\t{user.username}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t\t{friends.length == 0 && (\r\n\t\t\t\t\t<h1 style={{ color: \"red\" }}>You don't have any friend LOSER!</h1>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tfriends: {\r\n\t\talignSelf: \"baseline\",\r\n\t\tbackgroundColor: \"#333333\",\r\n\t\tcolor: \"red\",\r\n\t\twidth: \"33%\",\r\n\t\tmargin: \"2.5%\",\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tboxShadow: \"rgba(0, 0, 0) 0px 5px 15px\",\r\n\t},\r\n\trequest: {\r\n\t\talignSelf: \"baseline\",\r\n\t\tbackgroundColor: \"#333333\",\r\n\t\tpaddingLeft: 12,\r\n\t\tpaddingRight: 12,\r\n\t\tcolor: \"red\",\r\n\t\twidth: 240,\r\n\t\tmargin: \"2.5%\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tdisplay: \"flex\",\r\n\t\tboxShadow: \"rgba(0, 0, 0) 0px 5px 15px\",\r\n\t},\r\n};\r\n\r\nexport default Friends;\r\n","export class MediaProduct {\r\n    _id: string = ''\r\n    score: number = 4\r\n    release_date: Date = new Date()\r\n    name: string = ''\r\n    thumbnail_url: string = \"https://img1.evosis.org/movie/629/icon/icon0.png\"\r\n    description: string = ''\r\n    publisher: string = ''\r\n\r\n    constructor(details?: any) {\r\n        if (details) {\r\n            this._id = details.m_id\r\n            this.score = details.score || Math.random() * 5\r\n            this.release_date = new Date(details.release_date)\r\n            this.name = details.mp_name\r\n            this.thumbnail_url = details.thumbnail_url || \"https://img1.evosis.org/movie/629/icon/icon0.png\"\r\n            this.description = details.description || 'dummy desc'\r\n            this.publisher = details.publisher\r\n        }\r\n    }\r\n}","import { MediaProduct } from \"./media-product\"\r\n\r\nexport class Channel {\r\n    _id: string = ''\r\n    name: string = ''\r\n    medias: MediaProduct[] = []\r\n\r\n    constructor(details?: any) {\r\n        console.log('details ', details)\r\n        if (details) {\r\n            if (details.channel_id)\r\n                this._id = details.channel_id\r\n            if (details.c_name)\r\n                this.name = details.c_name\r\n            if (details.medias)\r\n                this.medias = details.medias.map((m: any) => new MediaProduct(m))\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\n\r\nimport { Channel } from \"../../../../../shared/models/channel\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\n\r\nfunction Channels(): JSX.Element {\r\n    const history = useHistory();\r\n\r\n    const [channels, setChannels] = useState<Channel[]>([]);\r\n    const [lastMovie, setLastMovie] = useState<MediaProduct>();\r\n    const [search, setSearch] = useState(\"\");\r\n    const [channelName, setChannelName] = useState(\"\");\r\n    const [channelError, setChannelError] = useState(\"\");\r\n    let [updateScreen, setUpdateScreen] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // get channels\r\n        if (Cache.getCurrentUser()) {\r\n            const options: RequestInit = {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            };\r\n            fetch(\r\n                `http://localhost:5000/channels/${Cache.getCurrentUser()?.username}`,\r\n                options\r\n            ).then((res) => {\r\n                res.json().then((result) => {\r\n                    if (result.failed) {\r\n                    } else if (result.success) {\r\n                        let channels = result.data.map(\r\n                            (channel: any) => new Channel(channel)\r\n                        );\r\n                        setChannels(channels);\r\n                        channels.forEach((channel: any) => {\r\n                            fetch(`http://localhost:5000/medias/${channel._id}`, options)\r\n                                .then((res) => {\r\n                                    res\r\n                                        .json()\r\n                                        .then((result) => {\r\n                                            if (result.failed) {\r\n                                            } else if (result.success) {\r\n                                                let medias = result.data.map(\r\n                                                    (media: any) => new MediaProduct(media)\r\n                                                );\r\n                                                channel.medias = medias;\r\n                                                let curChannels = channels;\r\n                                                curChannels[\r\n                                                    curChannels.findIndex((c: any) => c._id == channel._id)\r\n                                                ].medias = medias;\r\n                                                console.log('medias ', medias)\r\n                                                console.log('channels  ', curChannels)\r\n                                                setChannels(curChannels);\r\n                                                setUpdateScreen(updateScreen++);\r\n                                            }\r\n                                        })\r\n                                        .catch((err) => {\r\n                                            console.log(\"err \", err);\r\n                                        });\r\n                                })\r\n                                .catch((err) => {\r\n                                    console.log(\"err \", err);\r\n                                });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            fetch(`http://localhost:5000/last_watch/${Cache.getCurrentUser()?.username}`, options)\r\n                .then(res => {\r\n                    res.json().then(result => {\r\n                        console.log('result ', result)\r\n                        if (result.data)\r\n                            setLastMovie(new MediaProduct(result.data))\r\n                    })\r\n                })\r\n        }\r\n    }, []);\r\n\r\n    function onChannelPressed(channel: Channel): void {\r\n        history.push(`/channel/${channel._id}`);\r\n    }\r\n\r\n    function onMoviePressed(media: MediaProduct): void {\r\n        history.replace(`/browse/${media._id}`)\r\n    }\r\n\r\n    function createChannel(): void {\r\n        const options: RequestInit = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n                name: channelName,\r\n                username: Cache.getCurrentUser()?.username,\r\n            }),\r\n        };\r\n        fetch(\"http://localhost:5000/new_channel\", options).then((res) => {\r\n            res.json().then((result) => {\r\n                if (result.failed) {\r\n                    setChannelError(result.failed);\r\n                } else if (result.success) {\r\n                    let channel = new Channel(result.data);\r\n                    console.log('channel ', channel)\r\n                    history.replace(`/channel/${channel._id}`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{ ...styles.container, flexDirection: \"column\", flexWrap: \"wrap\" }}\r\n        >\r\n            <div\r\n                style={{\r\n                    ...styles.continueWatch,\r\n                    flexDirection: \"row\",\r\n                    justifyContent: \"space-between\",\r\n                }}\r\n            >\r\n                {\r\n                    lastMovie && (\r\n                        <div>\r\n                            <p style={{ ...styles.channelName, fontWeight: \"bold\" }}>\r\n                                Continue Watching\r\n\t\t\t\t\t\t</p>\r\n                            <button\r\n                                style={styles.button}\r\n                                onClick={() => onMoviePressed(lastMovie)}\r\n                            >\r\n                                <img\r\n                                    style={styles.thumbnailStyle}\r\n                                    src={lastMovie.thumbnail_url}\r\n                                />\r\n                            </button>\r\n\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                <div>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text>\r\n                                        <FaSearch />\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Search here..\"\r\n                                    onChange={(e) => setSearch(e.target.value)}\r\n                                    value={search}\r\n                                    onSubmit={() => {\r\n                                        //TODO submit\r\n                                    }}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <div style={{ flexDirection: \"row\", display: \"flex\" }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter channel name\"\r\n                            onChange={(e) => setChannelName(e.target.value)}\r\n                            value={channelName}\r\n                            maxLength={24}\r\n                            style={{ marginRight: 8, borderRadius: 6, paddingLeft: 6 }}\r\n                        />\r\n                        <Button\r\n                            onClick={createChannel}\r\n                            disabled={channelName == \"\"}\r\n                            variant=\"danger\"\r\n                        >\r\n                            New Channel\r\n\t\t\t\t\t\t\t</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {channels.map((channel: Channel) => (\r\n                <div key={channel._id} style={{ ...styles.channelContainer, flexDirection: \"column\" }}>\r\n                    <button\r\n                        style={styles.button}\r\n                        onClick={() => onChannelPressed(channel)}\r\n                    >\r\n                        <u style={{ ...styles.channelName, fontWeight: \"bold\" }}>\r\n                            {channel.name}\r\n                        </u>\r\n                    </button>\r\n                    <div>\r\n                        {channel?.medias.length == 0 ? (\r\n                            <div style={{ color: \"red\", fontSize: 24 }}>\r\n                                No media found!\r\n                            </div>\r\n                        ) : (\r\n                                channel?.medias.map((media) => (\r\n                                    <button\r\n                                        style={styles.button}\r\n                                        onClick={() => onMoviePressed(media)}\r\n                                    >\r\n                                        <img\r\n                                            style={{ width: 128, height: 128 }}\r\n                                            src={media.thumbnail_url}\r\n                                        />\r\n                                    </button>\r\n                                ))\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n    },\r\n    channelContainer: {\r\n        flex: 1,\r\n        maxHeight: 180,\r\n    },\r\n    channelName: {\r\n        color: \"white\",\r\n        margin: 0,\r\n    },\r\n    thumbnailStyle: {\r\n        width: 128,\r\n        height: 128,\r\n    },\r\n    button: {\r\n        backgroundColor: \"transparent\",\r\n        borderWidth: 0,\r\n    },\r\n    continueWatch: {\r\n        display: \"flex\",\r\n        height: 180,\r\n    },\r\n};\r\n\r\nexport default Channels;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport { APP_COLORS } from \"../../../../../shared/colors\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nimport { User } from \"../../../../../shared/models/user\";\r\nfunction Profile(): JSX.Element {\r\n  let curUser = Cache.getCurrentUser()\r\n  console.log(\"cur user \", curUser)\r\n  let n, s = \"\"\r\n  if (curUser instanceof User) {\r\n    n = curUser.fullname.split(' ')[0]\r\n    s = curUser.fullname.split(' ')[1]\r\n  }\r\n  console.log('n s', n, \" \", s)\r\n  const [name, setName] = useState(n);\r\n  const [surname, setSurname] = useState(s);\r\n  const [username, setUsername] = useState(curUser?.username);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [result, setResult] = useState('');\r\n\r\n  function saveChanges() {\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name,\r\n        surname,\r\n        username: Cache.getCurrentUser()?.username,\r\n        password: password,\r\n        type: \"individual\",\r\n        new_username: username\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:5000/update_profile\", options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          setResult(result.failed || result.success)\r\n        })\r\n      })\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\r\n      >\r\n        <div style={{ marginRight: 20 }}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Name:\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setName(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Surname\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setSurname(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Surname\"\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <div style={{ marginLeft: 20 }}>\r\n          <Form.Group controlId=\"formBasicText\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Username\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setUsername(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change your password\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={saveChanges}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n        <p>{result}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Movie(): JSX.Element {\r\n  const history = useHistory()\r\n\r\n  const [movies, setMovies] = useState<MediaProduct[]>([]);\r\n\r\n  useEffect(() => {\r\n    const options: RequestInit = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\"http://localhost:5000/movies\", options).then((res) => {\r\n      res.json().then((movies) => {\r\n        let allMovies = movies.data.map(\r\n          (movie: any) => new MediaProduct(movie)\r\n        );\r\n        setMovies(allMovies);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function onMoviePressed(media: MediaProduct): void {\r\n    history.push(`/browse/${media._id}`)\r\n  }\r\n  return (\r\n    <div className=\"fill-window\" style={{ ...styles.container, flexDirection: 'column', flexWrap: 'wrap' }}>\r\n      <h1>Movies</h1>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\r\n      >\r\n        {movies?.map((media: MediaProduct) => (\r\n          <button key={media._id} style={styles.button} onClick={() => onMoviePressed(media)}>\r\n            <img style={{ width: 128, height: 128 }} src={media.thumbnail_url} />\r\n            <p style={{ color: 'white' }}>{media.name}</p>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#333333\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  channelContainer: {\r\n    flex: 1,\r\n    maxHeight: 180,\r\n  },\r\n  channelName: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  thumbnailStyle: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  button: {\r\n    height: 140,\r\n    width: 140,\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n  },\r\n  continueWatch: {\r\n    display: \"flex\",\r\n    height: 180,\r\n  },\r\n};\r\n\r\n\r\nexport default Movie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\nimport \"./series.css\";\r\n\r\nfunction Series(): JSX.Element {\r\n  const history = useHistory()\r\n  const [allSeries, setSeries] = useState<MediaProduct[]>([]);\r\n\r\n  useEffect(() => {\r\n    const options: RequestInit = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    fetch(\"http://localhost:5000/series\", options).then((res) => {\r\n      res.json().then((series) => {\r\n        let allSeries = series.data.map(\r\n          (serie: any) => new MediaProduct(serie)\r\n        );\r\n        setSeries(allSeries);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  function onMoviePressed(media: MediaProduct): void {\r\n    history.push(`/browse/${media._id}`)\r\n  }\r\n  return (\r\n    <div className=\"fill-window\" style={{ ...styles.container, flexDirection: 'column', flexWrap: 'wrap' }}>\r\n      <h1>Series</h1>\r\n      <div\r\n      >\r\n        {allSeries?.map((media: MediaProduct) => (\r\n          <button key={media._id} style={styles.button} onClick={() => onMoviePressed(media)}>\r\n            <img style={{ width: 128, height: 128 }} src={media.thumbnail_url} />\r\n            <p style={{ color: 'white' }}>{media.name}</p>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#333333\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  channelContainer: {\r\n    flex: 1,\r\n    maxHeight: 180,\r\n  },\r\n  channelName: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  thumbnailStyle: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  button: {\r\n    height: 140,\r\n    width: 140,\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n  },\r\n  continueWatch: {\r\n    display: \"flex\",\r\n    height: 180,\r\n  },\r\n};\r\n\r\nexport default Series;\r\n","import React, { HTMLAttributes, useState } from \"react\";\r\nimport MainHeader from \"./main-header\";\r\nimport Friends from \"./friends-page\";\r\nimport Channels from \"./channels\";\r\nimport Profile from \"./profile\";\r\nimport Movie from \"./movie-page\";\r\nimport Series from \"./series-page\";\r\n\r\nexport type MainState = \"default\" | \"series\" | \"movies\" | \"friends\" | \"groups\" | \"profile\";\r\n\r\nfunction Main(): JSX.Element {\r\n  const [state, setState] = useState<MainState>(\"default\");\r\n\r\n  return (\r\n    <div style={{ ...styles.container, flexDirection: \"column\" }}>\r\n      <MainHeader changeState={setState} />\r\n      {state == \"default\" && (\r\n        <div style={styles.container}>\r\n          <Channels />\r\n        </div>\r\n      )}\r\n      {state == \"friends\" && (\r\n        <div style={styles.container}>\r\n          <Friends />\r\n        </div>)}\r\n      {state == \"series\" && (\r\n        <div style={{ color: \"white\" }}><Series /></div>\r\n      )}\r\n      {state == \"movies\" && (\r\n        <div style={{ color: \"white\" }}><Movie /></div>\r\n      )}\r\n      {state == \"groups\" && (\r\n        <div style={{ color: \"white\" }}>I am group case</div>\r\n      )}\r\n      {\r\n        state == 'profile' && (\r\n          <div style={styles.container}>\r\n            <Profile />\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#333333\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, InputGroup, Modal } from \"react-bootstrap\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\nimport { CompanyMainState, MediaTypeState } from \"../index\";\r\n\r\nfunction onMoviePressed(media: MediaProduct): void { }\r\ninterface DefaultProps {\r\n  changeState: (state: CompanyMainState) => void;\r\n  changeMedia: (state: MediaTypeState) => void;\r\n}\r\n\r\nfunction Default(props: DefaultProps): JSX.Element {\r\n  const { changeState, changeMedia } = props;\r\n\r\n\r\n  const [products, setProducts] = useState<MediaProduct[]>([]);\r\n\r\n  const [mediaType, setMediaType] = useState(\"empty\");\r\n  const handleMovie = () => setMediaType(\"movie\");\r\n  const handleSerie = () => setMediaType(\"series\");\r\n  const [search, setSearch] = useState('')\r\n\r\n  const [enableButton, setUpload] = useState(true);\r\n  const handleUpload = () => setUpload(false);\r\n  const handleDisable = () => setUpload(true);\r\n\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const handleClose = () => setShowDialog(false);\r\n  const handleShow = () => setShowDialog(true);\r\n\r\n  useEffect(() => {\r\n    const options: RequestInit = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ username: Cache.getCurrentUser()?.username })\r\n    }\r\n    fetch(`http://localhost:5000/medias`, options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          console.log('result ', result)\r\n          if (result.failed) {\r\n          } else if (result.success) {\r\n            let medias = result.data.map((media: any) => new MediaProduct(media))\r\n            setProducts(medias)\r\n          }\r\n        })\r\n      })\r\n  }, []);\r\n  return (\r\n    <div style={{ ...styles.big_container, flexDirection: \"column\" }}>\r\n      <div style={{ ...styles.container, flexDirection: \"row\" }}>\r\n        <Button variant=\"danger\" onClick={handleShow}>\r\n          Publish New Media\r\n        </Button>\r\n\r\n        <Modal\r\n          className=\"modal-dialog modal-sm\"\r\n          show={showDialog}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n\r\n          <Modal.Body\r\n            style={{\r\n              backgroundColor: \"pink\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <p style={{ fontSize: 20, fontWeight: \"bold\" }}>Choose type of the media </p>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios1\"\r\n                value=\"option1\"\r\n                onClick={() => { handleUpload(); changeMedia(\"series\"); }}\r\n              ></input>\r\n              <label className=\"form-check-label\" htmlFor=\"exampleRadios1\">\r\n                Series\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"exampleRadios\"\r\n                id=\"exampleRadios2\"\r\n                value=\"option2\"\r\n                onClick={() => { handleUpload(); changeMedia(\"movie\"); }}\r\n              ></input>\r\n              <label className=\"form-check-label\" htmlFor=\"exampleRadios2\">\r\n                Movie\r\n              </label>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer style={{ backgroundColor: \"pink\" }}>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={() => {\r\n                handleClose();\r\n                handleDisable();\r\n              }}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button variant=\"danger\" disabled={enableButton} onClick={() => { changeState(\"upload\"); }} >\r\n              Understood\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <Form.Row>\r\n          <Form.Group as={Col}>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <FaSearch />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search here..\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                value={search}\r\n                onSubmit={() => {\r\n                  //TODO submit\r\n                }}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form.Row>\r\n      </div>\r\n      <h2 style={{ fontSize: 24, color: \"white\", marginTop: 36 }}>\r\n        Last uploaded media products\r\n      </h2>\r\n      <div>\r\n        {products.map((media) => (\r\n          <button\r\n            style={styles.movie_button}\r\n            onClick={() => onMoviePressed(media)}\r\n          >\r\n            <img style={styles.thumbnailStyle} src={media.thumbnail_url} />\r\n            <p style={{ color: 'white' }}>{media.name}</p>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: 2,\r\n    paddingRight: 2,\r\n    paddingTop: 2,\r\n    width: \"100%\",\r\n  },\r\n  big_container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    paddingLeft: 8,\r\n    paddingRight: 8,\r\n    paddingTop: 8,\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"red\",\r\n    color: \"white\",\r\n    borderWidth: 3,\r\n    borderColor: \"black\",\r\n    fontStyle: \"bold\",\r\n  },\r\n  movie_button: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n  },\r\n  thumbnailStyle: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n};\r\n\r\nexport default Default;\r\n","import React from \"react\";\r\nimport { Button, ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\r\nimport { CompanyMainState } from \"../index\";\r\nimport { APP_STYLES } from \"../../../../../shared/styles\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface CompanyHeaderProps {\r\n  changeState: (state: CompanyMainState) => void;\r\n}\r\n\r\nfunction CompanyHeader(props: CompanyHeaderProps): JSX.Element {\r\n  const history = useHistory()\r\n\r\n  const { changeState } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <button\r\n          style={{ backgroundColor: 'transparent', borderWidth: 0, outline: 'none' }}\r\n          onClick={() => {\r\n            changeState(\"default\");\r\n          }}>\r\n          <h1\r\n            style={{\r\n              ...APP_STYLES.headerStyle,\r\n              fontWeight: \"bold\",\r\n              height: 40,\r\n            }}\r\n          >\r\n            Watchflix\r\n        </h1>\r\n        </button>\r\n\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          height: 40,\r\n        }}\r\n      >\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          className=\".transparent-button\"\r\n          style={styles.nameButton}\r\n          id=\"dropdown-basic-button\"\r\n          title={Cache.getCurrentUser()?.username} /** TODO: change into user.fullname */\r\n        >\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              changeState(\"profile\");\r\n            }}\r\n          >\r\n            Profile\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            onClick={() => {\r\n              Cache.logoutUser()\r\n              history.replace('/app')\r\n            }}\r\n          >\r\n            Log out\r\n          </Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    backgroundColor: \"#141414\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  button: {\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    textDecoration: \"underline\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  nameButton: {\r\n    backgroundColor: \"transparent\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n};\r\n\r\nexport default CompanyHeader;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport { APP_COLORS } from \"../../../../../shared/colors\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nfunction Profile(): JSX.Element {\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [result, setResult] = useState('');\r\n\r\n  function saveChanges() {\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name,\r\n        surname,\r\n        username: Cache.getCurrentUser()?.username,\r\n        password: password,\r\n        type: \"company\",\r\n        new_username: username\r\n      }),\r\n    };\r\n    fetch(\"http://localhost:5000/update_profile\", options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          setResult(result.failed || result.success)\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginTop: 60 }}\r\n      >\r\n        <div style={{ marginRight: 20 }}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Name:\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setName(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Surname\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setSurname(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Surname\"\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <div style={{ marginLeft: 20 }}>\r\n          <Form.Group controlId=\"formBasicText\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change Your Username\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setUsername(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label style={{ color: \"white\" }}>\r\n              Change your password\r\n            </Form.Label>\r\n            <Form.Control\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"danger\"\r\n          onClick={saveChanges}\r\n        >\r\n          Save Changes\r\n        </Button>\r\n        <p>{result}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","export class Genre {\r\n    name: string;\r\n\r\n    constructor(details?: any) {\r\n        this.name = details\r\n    }\r\n}","import { Genre } from \"../models/genre\";\r\n\r\nexport class MediaService {\r\n\r\n    static getGenres(): Genre[] {\r\n        // dummy data\r\n        let genre1 = new Genre('genre1');\r\n        let genre2 = new Genre('genre2');\r\n        let genre3 = new Genre('genre3');\r\n        let genre4 = new Genre('genre4');\r\n        let genre5 = new Genre('genre5');\r\n        let genre6 = new Genre('genre6');\r\n        let genre7 = new Genre('genre7');\r\n        let genre8 = new Genre('genre8');\r\n        let genre9 = new Genre('genre9');\r\n        let genre10 = new Genre('genre10');\r\n        let genre11 = new Genre('genre11');\r\n        let genre12 = new Genre('genre12');\r\n        let genre13 = new Genre('genre13');\r\n        let genres = []\r\n        genres.push(genre1)\r\n        genres.push(genre2)\r\n        genres.push(genre3)\r\n        genres.push(genre4)\r\n        genres.push(genre5)\r\n        genres.push(genre6)\r\n        genres.push(genre7)\r\n        genres.push(genre8)\r\n        genres.push(genre9)\r\n        genres.push(genre10)\r\n        genres.push(genre11)\r\n        genres.push(genre12)\r\n        genres.push(genre13)\r\n        return genres\r\n    }\r\n\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form, FormControl, InputGroup } from \"react-bootstrap\";\r\nimport { EndOfLineState, isElementAccessExpression } from \"typescript\";\r\nimport { CompanyMainState } from \"..\";\r\n\r\nimport { APP_COLORS } from \"../../../../../shared/colors\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nimport { MediaService } from \"../../../../../shared/libs/media-service\";\r\nimport { Genre } from \"../../../../../shared/models/genre\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\nimport { User } from \"../../../../../shared/models/user\";\r\nimport UploadEpisode from \"./episode-upload\";\r\ninterface UploadProps {\r\n  mediaProduct: string;\r\n  changeState: (state: CompanyMainState) => void;\r\n}\r\nfunction isMovie(mediatype: any): boolean {\r\n  if (mediatype == \"movie\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\ntype GenreState = {\r\n  genre: Genre;\r\n  checked: boolean;\r\n};\r\nfunction Upload(props: UploadProps): JSX.Element {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setRelease] = useState(new Date());\r\n  const [product, setProduct] = useState(\"\");\r\n  let count = 0;\r\n\r\n  const [enableButton, setButton] = useState(true);\r\n  const handleButton = () => setButton(\r\n    name == \"\" || count == 0\r\n  );\r\n\r\n  const { mediaProduct, changeState } = props;\r\n\r\n  const genres = MediaService.getGenres();\r\n  const [uploaded, setUploaded] = useState<MediaProduct[]>([]);;\r\n  const handleUpload = (MediaProduct: any) => { setUploaded([...uploaded, MediaProduct]) };\r\n\r\n  const [genreStates, setGenreStates] = useState<GenreState[]>([]);\r\n  const [updateScreen, setUpdateScreen] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    let genreStates = genres.map((genre) => ({ genre, checked: false }));\r\n    setGenreStates(genreStates);\r\n    setUploaded(uploaded);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ flex: 1 }}>\r\n      <Form\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          marginTop: 40,\r\n          justifyContent: \"space-between\",\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Form.Group\r\n          style={{\r\n            ...styles.formGroup,\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Form.Label\r\n            style={{\r\n              fontSize: 16,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            {isMovie(mediaProduct) ? \"Movie\" : \"Series\"} name:{\" \"}\r\n          </Form.Label>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              className=\"col-sm-10\"\r\n              type=\"name\"\r\n              onChange={(event) => setName(event.target.value)}\r\n              onClick={() => { handleButton(); }}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group style={{ ...styles.formGroup, flexDirection: \"row\" }}>\r\n          <Form.Label style={{ fontSize: 16, fontWeight: \"bold\" }}>\r\n            {\" \"}\r\n            Release date:{\" \"}\r\n          </Form.Label>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"dob\"\r\n              placeholder=\"Date of Birth\"\r\n              onChange={(event) => setRelease(new Date(event.target.value))}\r\n              onClick={() => { handleButton(); }}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <p>Enter genres for your product:</p>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", maxWidth: \"80%\" }}>\r\n          {genreStates.map(({ genre, checked }, index) => (\r\n            <Form.Group\r\n              style={{ flex: 1, margin: 20, maxWidth: \"33%\", minWidth: \"20%\" }}\r\n              controlId=\"formBasicCheckbox\"\r\n            >\r\n              <Form.Check\r\n                checked={checked}\r\n                type=\"checkbox\"\r\n                label={genre.name}\r\n                onClick={() => {\r\n\r\n                  genreStates[index].checked = !genreStates[index].checked;\r\n                  if (genreStates[index].checked) {\r\n                    count++;\r\n                  } else {\r\n                    count--;\r\n                  }\r\n                  handleButton();\r\n                  console.log(\"genre states \", genreStates);\r\n                  setGenreStates(genreStates);\r\n                  setUpdateScreen(!updateScreen);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n          ))}\r\n        </div>\r\n        {isMovie(mediaProduct) ? (\r\n          <div style={{ display: \"flex\", flex: 1, flexDirection: \"column\" }}>\r\n            <div className=\"input-group mb-3\" style={{ maxWidth: \"40%\" }}>\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Upload</span>\r\n              </div>\r\n              <div className=\"custom-file\">\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  id=\"inputGroupFile01\"\r\n                  onChange={(event) => setProduct(event.target.value)}\r\n                  onClick={() => { handleButton(); }}\r\n                ></input>\r\n                <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                  Choose file\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"submit\"\r\n              style={{ display: \"flex\", alignSelf: \"flex-end\" }}\r\n              disabled={enableButton}\r\n              onClick={() => {\r\n                const options: RequestInit = {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify({\r\n                    release_date: User.formatDate(date),\r\n                    name,\r\n                    publisher: Cache.getCurrentUser()?.username,\r\n                  }),\r\n                };\r\n                fetch(\"http://localhost:5000/upload\", options)\r\n                  .then(res => {\r\n                    res.json().then(result => {\r\n                      if (result.success) {\r\n                        changeState('default')\r\n                      }\r\n                    })\r\n                  })\r\n              }}\r\n            >\r\n              Finish\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n            <Button\r\n              variant=\"danger\"\r\n              type=\"next\"\r\n              style={{ display: \"flex\", alignSelf: \"flex-end\" }}\r\n              disabled={enableButton}\r\n              onClick={() => { changeState(\"episodeUpload\"); }}\r\n            >\r\n              Next\r\n            </Button>\r\n          )}\r\n      </Form>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  formGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    maxWidth: \"50%\",\r\n  },\r\n};\r\nexport default Upload;\r\n","export class Episode {\r\n    _id: string\r\n    name: string\r\n    season_number: string \r\n    episode_number: string\r\n    thumbnail_url: string\r\n\r\n    constructor(details?: any) {\r\n        this._id = details._id\r\n        this.name = details.name\r\n        this.season_number = details.season_number\r\n        this.episode_number = details.episode_number\r\n        this.thumbnail_url = details.thumbnail_url\r\n    }\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\n\r\nimport { CompanyMainState } from \"../..\";\r\nimport { Episode } from \"../../../../../../shared/models/episode\";\r\n\r\ninterface UploadEpisodeProps {\r\n  mediaProduct: string;\r\n  changeState: (state: CompanyMainState) => void;\r\n}\r\n\r\nfunction UploadEpisode(props: UploadEpisodeProps): JSX.Element {\r\n  const { mediaProduct, changeState } = props;\r\n  const [episode_name, setName] = useState(\"\");\r\n  const [s_number, setSeason] = useState(\"1\");\r\n  const [e_number, setEpisode] = useState(\"1\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const handleForm = () => {\r\n    setName(\"\");\r\n    setSeason(\"1\");\r\n    setEpisode(\"1\");\r\n    setFile(\"\");\r\n  };\r\n  const [uploaded, setUploaded] = useState<Episode[]>([]);\r\n  const handleUpload = (Episode: any) => {\r\n    setUploaded([...uploaded, Episode]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUploaded(uploaded);\r\n  }, []);\r\n  return (\r\n    <div style={{ flex: 1, flexDirection: \"column\" }}>\r\n      <Form\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          marginTop: 40,\r\n          justifyContent: \"space-between\",\r\n          flex: 1,\r\n          maxWidth: \"70%\",\r\n        }}\r\n      >\r\n        <Form.Group\r\n          style={{\r\n            ...styles.formGroup,\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Form.Label\r\n            style={{\r\n              fontSize: 16,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Episode name:\r\n          </Form.Label>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              value={episode_name}\r\n              className=\"col-sm-10\"\r\n              type=\"name\"\r\n              onChange={(event) => setName(event.target.value)}\r\n              //onClick = {() => {handleButton();}}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group\r\n          style={{\r\n            ...styles.formGroup,\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Form.Label\r\n            style={{\r\n              fontSize: 16,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Season number:\r\n          </Form.Label>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              value={s_number}\r\n              className=\"col-sm-10\"\r\n              type=\"number\"\r\n              onChange={(event) => setSeason(event.target.value)}\r\n              //onClick = {() => {handleButton();}}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group\r\n          style={{\r\n            ...styles.formGroup,\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <Form.Label\r\n            style={{\r\n              fontSize: 16,\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Episode number:\r\n          </Form.Label>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              value={e_number}\r\n              className=\"col-sm-10\"\r\n              type=\"number\"\r\n              onChange={(event) => setEpisode(event.target.value)}\r\n              //onClick = {() => {handleButton();}}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <p style={{ fontSize: 20 }}>Upload your product</p>\r\n        <div className=\"custom-file\">\r\n          <input\r\n            type=\"file\"\r\n            className=\"custom-file-input\"\r\n            id=\"inputGroupFile01\"\r\n            value={file}\r\n            onChange={(event) => setFile(event.target.value)}\r\n            onClick={() => {\r\n              //handleButton();\r\n            }}\r\n          ></input>\r\n          <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n            Choose file\r\n          </label>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flex: 1,\r\n            flexDirection: \"row\",\r\n            alignSelf: \"flex-end\",\r\n            maxWidth: \"40%\",\r\n            justifyContent: \"spaceBetween\"\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"danger\"\r\n            type=\"submit\"\r\n            style={{ display: \"flex\", alignSelf: \"flex-end\" }}\r\n            onClick={() => {\r\n              window.location.reload();\r\n              handleForm();\r\n              let episode = new Episode({ _id: 'xxxx', name: {episode_name}, season_number: {s_number}, episode_number: {e_number}, thumbnail_url: {file} })\r\n              handleUpload(episode);\r\n            }}\r\n          >\r\n            Next\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            type=\"submit\"\r\n            style={{ display: \"flex\", alignSelf: \"flex-end\" }}\r\n            //disabled={enableButton}\r\n          >\r\n            Finish\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  formGroup: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    maxWidth: \"50%\",\r\n  },\r\n};\r\n\r\nexport default UploadEpisode;\r\n","import React, { useState } from \"react\";\r\nimport Default from \"./company-default\";\r\n\r\nimport CompanyHeader from \"./company-header\";\r\nimport Profile from \"./profile-page\";\r\nimport Upload from \"./upload-page\";\r\nimport UploadEpisode from \"./upload-page/episode-upload\";\r\n\r\nexport type CompanyMainState =\r\n  | \"default\"\r\n  | \"search\"\r\n  | \"profile\"\r\n  | \"upload\"\r\n  | \"episodeUpload\";\r\nexport type MediaTypeState = \"empty\" | \"movie\" | \"series\";\r\nfunction MainCompany(): JSX.Element {\r\n  const [state, setState] = useState<CompanyMainState>(\"default\");\r\n  const [mediaType, setMediaType] = useState<MediaTypeState>(\"empty\");\r\n\r\n  return (\r\n    <div\r\n      className=\"overflow-auto\"\r\n      style={{\r\n        flex: 1,\r\n        backgroundColor: \"#333333\",\r\n        paddingLeft: 24,\r\n        paddingRight: 24,\r\n        paddingTop: 24,\r\n      }}\r\n    >\r\n      <CompanyHeader changeState={setState} />\r\n      {state == \"default\" && (\r\n        <div style={styles.container}>\r\n          <Default changeState={setState} changeMedia={setMediaType} />\r\n        </div>\r\n      )}\r\n      {state == \"profile\" && (\r\n        <div style={styles.container}>\r\n          <Profile />\r\n        </div>\r\n      )}\r\n      {state == \"upload\" && (\r\n        <div style={{ color: \"white\" }}>\r\n          <Upload mediaProduct={mediaType} changeState = {setState}/>\r\n        </div>\r\n      )}\r\n      {state == \"episodeUpload\" && (\r\n        <div style={{ color: \"white\" }}>\r\n          <UploadEpisode mediaProduct={mediaType} changeState = {setState} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n};\r\n\r\nexport default MainCompany;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Main from \"./main\";\r\nimport MainCompany from \"./company-main\";\r\nimport \"./home.css\";\r\nimport { CompanyUser, User } from \"../../../shared/models/user\";\r\nimport { Cache } from \"../../../shared/libs/cache\";\r\n\r\nfunction Home(): JSX.Element {\r\n  const history = useHistory();\r\n  const [currentUser, setCurrentUser] = useState<User | CompanyUser>();\r\n\r\n  function onLoginClicked() {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  function onRegisterClicked() {\r\n    history.push(\"/register\");\r\n  }\r\n\r\n  function isUserLoggedIn(): boolean {\r\n    console.log('getting user ')\r\n    let currentUser = Cache.getCurrentUser()\r\n    return (!!currentUser && currentUser != null);\r\n  }\r\n\r\n  function isCompanyUser(): boolean {\r\n    let currentUser = Cache.getCurrentUser()\r\n    return currentUser?.type === 'company';\r\n  }\r\n\r\n  return (\r\n    <div className=\"fill-window\" style={styles.container}>\r\n      {\r\n        isUserLoggedIn() ? (\r\n          isCompanyUser() ?\r\n            <MainCompany /> :\r\n            <Main />\r\n        ) : (\r\n            <div className=\"container-fluid homepage-bgimage\">\r\n              <Button\r\n                onClick={onLoginClicked}\r\n                style={{ position: \"absolute\", top: 10, right: 10 }}\r\n                variant=\"danger\"\r\n              >\r\n                Login\r\n          </Button>\r\n              <div style={styles.headerContainer}>\r\n                <h1 style={{ ...styles.headerContainer, fontWeight: \"bold\" }}>Watchflix</h1>\r\n              </div>\r\n              <div style={styles.sloganContainer}>\r\n                <h2 style={{ ...styles.sloganContainer, fontWeight: \"bold\" }}>Watchflix and Chill</h2>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  flex: 1,\r\n                  display: \"flex\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Button onClick={onRegisterClicked} variant=\"danger\">\r\n                  Register Now!\r\n            </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    backgroundImage: 'url(${background_photo})',\r\n  },\r\n  headerContainer: {\r\n    width: \"100%\",\r\n    marginTop: \"2%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"red\",\r\n  },\r\n  header: {\r\n    fontSize: 32,\r\n    color: \"red\",\r\n  },\r\n  sloganContainer: {\r\n    width: \"100%\",\r\n    marginTop: \"0.5%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    color: \"red\",\r\n  },\r\n  slogan: {\r\n    fontSize: 32,\r\n    color: \"red\",\r\n  },\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { APP_COLORS } from '../../../shared/colors'\r\nimport { CompanyUser, User, UserType } from '../../../shared/models/user';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Cache } from '../../../shared/libs/cache';\r\n\r\n\r\nfunction Login(): JSX.Element {\r\n    const [userType, setUserType] = useState<UserType>('individual');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const history = useHistory();\r\n\r\n    const companyInputRef = useRef<HTMLInputElement>(null)\r\n    const individualInputRef = useRef<HTMLInputElement>(null)\r\n\r\n    function setChecked(option: UserType) {\r\n        setUserType(option)\r\n    }\r\n\r\n    function renderInner(): JSX.Element {\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                <h3 style={{ textAlign: 'center', color: APP_COLORS.darkGray }}>\r\n                    Login to your account. Please specify account type.\r\n                </h3>\r\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                    <input ref={companyInputRef} checked={userType == 'company'} type='radio' name=\"user\" value='Company' onClick={() => setChecked(\"company\")} />\r\n                    <button style={{ marginLeft: 12, border: 0, backgroundColor: 'transparent' }} onClick={() => setChecked('company')}>\r\n                        Company\r\n                    </button>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                    <input checked={userType == 'individual'} ref={individualInputRef} defaultChecked type='radio' name=\"user\" value='Individual' onClick={() => setChecked('individual')} />\r\n                    <button style={{ marginLeft: 12, border: 0, backgroundColor: 'transparent' }} onClick={() => setChecked('individual')}>\r\n                        Individual\r\n                    </button>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    <div style={{ marginTop: 30 }}>\r\n                        <Form.Group controlId=\"formBasicText\">\r\n                            <Form.Label>Enter your username</Form.Label>\r\n                            <Form.Control\r\n                                onChange={(event) => {\r\n                                    setError('')\r\n                                    setUsername(event.target.value)\r\n                                }}\r\n                                type=\"text\" placeholder=\"Username\" />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Enter your password</Form.Label>\r\n                            <Form.Control\r\n                                onChange={(event) => {\r\n                                    setError('')\r\n                                    setPassword(event.target.value)\r\n                                }}\r\n                                type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    function renderButton(): JSX.Element {\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '5%', width: '30%' }}>\r\n                {\r\n                    <Button style={styles.nextButton} disabled={!(username && password)} onClick={login} variant=\"danger\">Login</Button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function login(): void {\r\n        console.log('usertype ', userType)\r\n\r\n        if (userType == \"individual\") {\r\n            // complete registration for individual\r\n            const options: RequestInit = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ userType, username, password })\r\n            }\r\n            fetch('http://localhost:5000/login', options)\r\n                .then(res => {\r\n                    console.log(\"res \", res)\r\n                    res.json().then(result => {\r\n                        console.log('result ', result)\r\n                        if (result.failed) {\r\n                            setError(result.failed)\r\n                        } else if (result.success) {\r\n                            let user = new User(result.data)\r\n                            user.type = 'individual'\r\n                            Cache.setCurrenUser(user)\r\n                            history.replace('/app')\r\n                        }\r\n                    })\r\n                })\r\n        } else if (userType == \"company\") {\r\n            // complete registration for company\r\n            const options: RequestInit = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    userType, username, password\r\n                })\r\n            }\r\n            fetch('http://localhost:5000/login', options)\r\n                .then(res => {\r\n                    res.json().then(result => {\r\n                        console.log('result ', result)\r\n                        if (result.failed) {\r\n                            setError(result.failed)\r\n                        } else if (result.success) {\r\n                            let user = new CompanyUser(result.data)\r\n                            user.type = 'company'\r\n                            Cache.setCurrenUser(user)\r\n                            history.replace('/app')\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ ...styles.container, ...{ flexDirection: 'column' } }}>\r\n            <h1 style={styles.header}>Watchflix</h1>\r\n            <h3 style={{ textAlign: 'center' }}>Just a few steps to enjoy movie night</h3>\r\n            <div style={{ ...styles.innerContainer, ...{ flexDirection: 'column' } }} >\r\n                {renderInner()}\r\n                {renderButton()}\r\n                <p style={{\r\n                    color: 'red'\r\n                }}>\r\n                    {error}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        overflow: 'auto',\r\n        backgroundColor: '#DDDDDD',\r\n        paddingBottom: 20\r\n    },\r\n    header: {\r\n        color: APP_COLORS.red,\r\n        marginTop: '5%'\r\n    },\r\n    innerContainer: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        width: '90%',\r\n        marginHorizontal: '5%',\r\n        backgroundColor: '#E0CCCC',\r\n        borderWidth: 4,\r\n        borderColor: '#EA9999',\r\n        borderStyle: 'solid',\r\n        alignItems: 'center',\r\n        paddingTop: '5%',\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n        paddingBottom: 20\r\n    },\r\n    blackText: {\r\n        color: APP_COLORS.darkGray,\r\n    },\r\n    contentContainer: {\r\n        display: 'flex'\r\n    },\r\n    nextButton: {\r\n        width: '70%',\r\n        minWidth: 240\r\n    }\r\n}\r\nexport default Login","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { APP_COLORS } from \"../../../shared/colors\";\r\nimport { Cache } from \"../../../shared/libs/cache\";\r\nimport { MediaService } from \"../../../shared/libs/media-service\";\r\nimport { Genre } from \"../../../shared/models/genre\";\r\nimport { CompanyUser, User, UserType } from \"../../../shared/models/user\";\r\n\r\nimport \"./register.css\";\r\n\r\ntype GenreState = {\r\n  genre: Genre;\r\n  checked: boolean;\r\n};\r\n\r\nfunction Register(): JSX.Element {\r\n  const history = useHistory()\r\n\r\n  const genres = MediaService.getGenres();\r\n\r\n  const [currentStage, setCurrentStage] = useState(1);\r\n  const [genreStates, setGenreStates] = useState<GenreState[]>([]);\r\n  const [updateScreen, setUpdateScreen] = useState(false);\r\n\r\n  const [userType, setUserType] = useState<UserType>(\"individual\");\r\n\r\n  const [name, setName] = useState(\"Javid\");\r\n  const [surname, setSurname] = useState(\"Haji-zada\");\r\n  const [username, setUsername] = useState(\"jahazious\");\r\n  const [password, setPassword] = useState(\"mypass\");\r\n  const [birthday, setBirthday] = useState<Date>(new Date());\r\n  const [email, setEmail] = useState(\"cavid.hacizadee.99@gmail.com\");\r\n\r\n  const companyInputRef = useRef<HTMLInputElement>(null);\r\n  const individualInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    let genreStates = genres.map((genre) => ({ genre, checked: false }));\r\n    setGenreStates(genreStates);\r\n  }, []);\r\n\r\n  function setChecked(option: UserType) {\r\n    setUserType(option);\r\n  }\r\n\r\n  function renderInner(): JSX.Element {\r\n    switch (currentStage) {\r\n      case 1: {\r\n        return (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h3 style={{ textAlign: \"center\", color: APP_COLORS.darkGray }}>\r\n              Is this account for a company or individual purposes?:\r\n            </h3>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <input\r\n                ref={companyInputRef}\r\n                checked={userType == \"company\"}\r\n                type=\"radio\"\r\n                name=\"user\"\r\n                value=\"Company\"\r\n                onClick={() => setChecked(\"company\")}\r\n              />\r\n              <button\r\n                style={{\r\n                  marginLeft: 12,\r\n                  border: 0,\r\n                  backgroundColor: \"transparent\",\r\n                }}\r\n                onClick={() => setChecked(\"company\")}\r\n              >\r\n                Company\r\n              </button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              <input\r\n                checked={userType == \"individual\"}\r\n                ref={individualInputRef}\r\n                defaultChecked\r\n                type=\"radio\"\r\n                name=\"user\"\r\n                value=\"Individual\"\r\n                onClick={() => setChecked(\"individual\")}\r\n              />\r\n              <button\r\n                style={{\r\n                  marginLeft: 12,\r\n                  border: 0,\r\n                  backgroundColor: \"transparent\",\r\n                }}\r\n                onClick={() => setChecked(\"individual\")}\r\n              >\r\n                Individual\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      case 2: {\r\n        return (\r\n          <div>\r\n            {userType == \"individual\" ? (\r\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                <div style={{ marginRight: 20 }}>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Enter Your Name:</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(event) => setName(event.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Enter Your Surname</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(event) => setSurname(event.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Surname\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    controlId=\"formBasicCheckbox\"\r\n                    style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                  >\r\n                    <Form.Label>Birthday</Form.Label>\r\n                    <input\r\n                      style={{\r\n                        borderColor: APP_COLORS.inputBorderGray,\r\n                        borderStyle: \"solid\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 6,\r\n                        padding: 6,\r\n                        color: APP_COLORS.inputPlaceholder,\r\n                      }}\r\n                      type=\"date\"\r\n                      id=\"birthday\"\r\n                      name=\"birthday\"\r\n                      min=\"1900-01-01\"\r\n                      max=\"2007-01-01\"\r\n                      onChange={(event) =>\r\n                        setBirthday(new Date(event.target.value))\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n                <div style={{ marginLeft: 20 }}>\r\n                  <Form.Group controlId=\"formBasicText\">\r\n                    <Form.Label>Create Your Username</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(event) => setUsername(event.target.value)}\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Choose password</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(event) => setPassword(event.target.value)}\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>E-mail Address</Form.Label>\r\n                    <Form.Control\r\n                      onChange={(event) => setEmail(event.target.value)}\r\n                      type=\"email\"\r\n                      placeholder=\"E-mail\"\r\n                    />\r\n                  </Form.Group>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                  <div style={{ marginRight: 20 }}>\r\n                    <Form.Group controlId=\"formBasicText\">\r\n                      <Form.Label>Company Name:</Form.Label>\r\n                      <Form.Control\r\n                        onChange={(event) => setName(event.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Company Name\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                      <Form.Label>E-mail Address</Form.Label>\r\n                      <Form.Control\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                        type=\"email\"\r\n                        placeholder=\"E-mail\"\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div style={{ marginLeft: 20 }}>\r\n                    <Form.Group controlId=\"formBasicText\">\r\n                      <Form.Label>Create Company Username</Form.Label>\r\n                      <Form.Control\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                      <Form.Label>Choose password</Form.Label>\r\n                      <Form.Control\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      {/* <Form.Text className=\"text-danger\">\r\n                                                    We'll never share your email with anyone else.\r\n                                                </Form.Text> */}\r\n                    </Form.Group>\r\n                  </div>\r\n                </div>\r\n              )}\r\n          </div>\r\n        );\r\n      }\r\n      case 3: {\r\n        return (\r\n          <div style={{ width: \"60%\", padding: 20 }}>\r\n            <p>Choose your preferences</p>\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n              {genreStates.map(({ genre, checked }, index) => (\r\n                <Form.Group\r\n                  style={{\r\n                    flex: 1,\r\n                    margin: 20,\r\n                    maxWidth: \"33%\",\r\n                    minWidth: \"20%\",\r\n                  }}\r\n                  controlId=\"formBasicCheckbox\"\r\n                >\r\n                  <Form.Check\r\n                    checked={checked}\r\n                    type=\"checkbox\"\r\n                    label={genre.name}\r\n                    onClick={() => {\r\n                      genreStates[index].checked = !genreStates[index].checked;\r\n                      console.log(\"genre states \", genreStates);\r\n                      setGenreStates(genreStates);\r\n                      setUpdateScreen(!updateScreen);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      default: {\r\n        return <div />;\r\n      }\r\n    }\r\n  }\r\n\r\n  function finalizeRegistration(): void {\r\n    if (userType == \"individual\") {\r\n      // complete registration for individual\r\n      let user = new User({ type: userType, username, email, birthday, fullname: name + \" \" + surname });\r\n      console.log('creating individual user ', user)\r\n      console.log('creating individual user ', JSON.stringify(user))\r\n      const options: RequestInit = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...user, preffered_genres: genreStates.map(genreState => {\r\n            if (genreState.checked)\r\n              return genreState.genre\r\n          }).filter(genre => genre),\r\n          password,\r\n          birthday: User.formatDate(birthday)\r\n        })\r\n      }\r\n      fetch('http://localhost:5000/register', options)\r\n        .then(res => {\r\n          console.log('res ', res.body)\r\n          Cache.setCurrenUser(user)\r\n          history.replace('/app')\r\n        })\r\n        .then(contents => {\r\n          console.log('contents ', contents)\r\n        })\r\n        .catch(err => {\r\n          console.log('err ', err)\r\n        })\r\n    } else if (userType == \"company\") {\r\n      // complete registration for company\r\n      let companyUser = new User({ type: userType, username, email, birthday, fullname: name });\r\n      const options: RequestInit = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          ...companyUser, preffered_genres: genreStates.map(genreState => {\r\n            if (genreState.checked)\r\n              return genreState.genre\r\n          }).filter(genre => genre),\r\n          password,\r\n          birthday: User.formatDate(birthday)\r\n        })\r\n      }\r\n      fetch('http://localhost:5000/register', options)\r\n        .then(res => {\r\n          console.log('res ', res)\r\n          Cache.setCurrenUser(companyUser)\r\n          history.replace('/app')\r\n        })\r\n        .then(contents => {\r\n          console.log('contents ', contents)\r\n        })\r\n        .catch(err => {\r\n          console.log('err ', err)\r\n        })\r\n    }\r\n  }\r\n\r\n  function renderButton(): JSX.Element {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          marginTop: \"10%\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {userType == \"individual\" ? (\r\n          currentStage == 3 ? (\r\n            <Button\r\n              style={styles.nextButton}\r\n              onClick={finalizeRegistration}\r\n              variant=\"danger\"\r\n            >\r\n              Register Me!\r\n            </Button>\r\n          ) : (\r\n              <Button\r\n                style={styles.nextButton}\r\n                disabled={!(name && username && password && email && birthday && surname) && (currentStage == 2)}\r\n                onClick={() => setCurrentStage(currentStage + 1)}\r\n                variant=\"danger\"\r\n              >\r\n                Next\r\n              </Button>\r\n            )\r\n        ) : currentStage == 2 ? (\r\n          <Button\r\n            disabled={!(name && username && password && email) && (currentStage == 2)}\r\n            style={styles.nextButton}\r\n            onClick={finalizeRegistration}\r\n            variant=\"danger\"\r\n          >\r\n            Register Me!\r\n          </Button>\r\n        ) : (\r\n              <Button\r\n                style={styles.nextButton}\r\n                onClick={() => setCurrentStage(currentStage + 1)}\r\n                variant=\"danger\"\r\n              >\r\n                Next\r\n              </Button>\r\n            )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ ...styles.container, ...{ flexDirection: \"column\" } }}>\r\n      <h1 style={styles.header}>Watchflix</h1>\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        Just a few steps to enjoy movie night\r\n      </h3>\r\n      <div style={{ ...styles.innerContainer, ...{ flexDirection: \"column\" } }}>\r\n        {renderInner()}\r\n        {renderButton()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    color: APP_COLORS.red,\r\n    marginTop: \"5%\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    width: \"90%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: \"#E0CCCC\",\r\n    borderWidth: 4,\r\n    borderColor: \"#EA9999\",\r\n    borderStyle: \"solid\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"5%\",\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  blackText: {\r\n    color: APP_COLORS.darkGray,\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n  },\r\n  nextButton: {\r\n    width: \"70%\",\r\n    minWidth: 240,\r\n  },\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { MediaProduct } from '../../models/media-product'\r\n\r\ninterface MediaProps {\r\n    media: MediaProduct\r\n}\r\nfunction Media(props: MediaProps): JSX.Element {\r\n    const { media } = props\r\n    const history = useHistory();\r\n    function onMoviePressed() {\r\n        history.replace(`/browse/${media._id}`)\r\n    }\r\n    return (\r\n        <button\r\n            style={styles.button}\r\n            onClick={onMoviePressed}\r\n        >\r\n            <img\r\n                style={{ width: 128, height: 128 }}\r\n                src={media.thumbnail_url}\r\n            />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n        backgroundColor: \"transparent\",\r\n        borderWidth: 0,\r\n    },\r\n}\r\n\r\nexport default Media","import React, { useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"./channel.css\";\r\nimport { Channel } from \"../../../shared/models/channel\";\r\nimport { MediaProduct } from \"../../../shared/models/media-product\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Media from \"../../../shared/components/media\";\r\n\r\nfunction ChannelPage(props: any): JSX.Element {\r\n  const history = useHistory();\r\n  const [channelID, setChannelID] = useState(\"\");\r\n  const [lastMovie, setLastMovie] = useState<MediaProduct>();\r\n  const [currentChannel, setChannel] = useState<Channel>();\r\n  const [channelLoading, setChannelLoading] = useState(true)\r\n  const [mediasLoading, setMediasLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    let _id = props.match.params.id\r\n    console.log(\"id \", _id)\r\n    const options: RequestInit = {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    }\r\n    fetch(`http://localhost:5000/channel/${_id}`, options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          console.log('result ', result)\r\n          if (result.failed) {\r\n          } else if (result.success) {\r\n            let channel = new Channel(result.data)\r\n            setChannelLoading(false)\r\n            fetch(`http://localhost:5000/medias/${_id}`, options)\r\n              .then(res => {\r\n                res.json().then(result => {\r\n                  if (result.failed) {\r\n                  } else if (result.success) {\r\n                    let medias = result.data.map((media: any) => new MediaProduct(media))\r\n                    channel.medias = medias\r\n                    console.log('channel is ', channel)\r\n                    setChannel(channel)\r\n                    setMediasLoading(false)\r\n                  }\r\n                })\r\n                  .catch(err => {\r\n                    console.log('err ', err)\r\n                  })\r\n              })\r\n              .catch(err => {\r\n                console.log('err ', err)\r\n              })\r\n          }\r\n        })\r\n      })\r\n\r\n  }, []);\r\n\r\n  function onMoviePressed(media: MediaProduct): void { }\r\n\r\n  return (\r\n    <div className=\"fill-window\" style={styles.container}>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"left\" }}\r\n      >\r\n        <button\r\n          style={{\r\n            border: 0,\r\n            backgroundColor: \"transparent\",\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            outline: \"None\",\r\n          }}\r\n          onClick={() => {\r\n            history.replace(\"/app\");\r\n          }}\r\n        >\r\n          <p\r\n            style={{\r\n              color: \"white\",\r\n              textDecoration: \"underline\",\r\n              alignSelf: \"left,\",\r\n            }}\r\n          >\r\n            {\r\n              channelLoading ? (\r\n                <Spinner animation=\"border\" variant=\"danger\" />\r\n              ) : (\r\n                  \"<<\" + currentChannel?.name\r\n                )\r\n            }\r\n          </p>\r\n        </button>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"left\", marginBottom: 12 }}\r\n        >\r\n          {\r\n            mediasLoading ? (\r\n              <Spinner animation=\"border\" variant=\"danger\" />\r\n            ) : (\r\n                currentChannel?.medias.length == 0 ? (\r\n                  <div style={{ color: 'red', fontSize: 24 }}>No media found!</div>\r\n                ) : (\r\n                    currentChannel?.medias.map((media) => (\r\n\r\n                      <Media media={media} />\r\n                      // <button style={styles.button} onClick={() => onMoviePressed(media)}>\r\n                      // <img style={{ width: 128, height: 128 }} src={media.thumbnail_url} />\r\n                      // </button>\r\n                    ))\r\n                  )\r\n              )\r\n          }\r\n        </div>\r\n        <button\r\n          style={{\r\n            border: 0,\r\n            backgroundColor: \"transparent\",\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            outline: \"none\",\r\n          }}\r\n          onClick={() =>\r\n            history.replace(`/channel/${currentChannel?._id}/suggestions`)\r\n          }\r\n        >\r\n          <p style={{ color: \"white\", textDecoration: \"underline\" }}>\r\n            {\"Suggestions for \" + currentChannel?.name}\r\n          </p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#333333\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  channelContainer: {\r\n    flex: 1,\r\n    maxHeight: 180,\r\n  },\r\n  channelName: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  thumbnailStyle: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  button: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n  },\r\n  continueWatch: {\r\n    display: \"flex\",\r\n    height: 180,\r\n  },\r\n};\r\n\r\nexport default ChannelPage;\r\n","export class Comment {\r\n    username: string = ''\r\n    comment_id: string = ''\r\n    replied_to: string = ''\r\n    comment_date: Date = new Date()\r\n    c_content: string = ''\r\n    m_id: string = ''\r\n\r\n    constructor(details?: any) {\r\n        console.log('create new comment from ', details)\r\n        if (details) {\r\n            this.username = details.username;\r\n            this.comment_id = details.comment_id;\r\n            this.replied_to = details.reply_to;\r\n            this.comment_date = new Date(details.comment_date);\r\n            this.c_content = details.c_content;\r\n            this.m_id = details.m_id;\r\n        }\r\n    }\r\n}","export class WatchStatus {\r\n    username: string\r\n    m_id: string\r\n    watch_date: Date\r\n    watch_count: number\r\n\r\n    constructor(details?: any) {\r\n        this.username = details.username;\r\n        this.m_id =  details.m_id;\r\n        this.watch_date =  details.watch_date;\r\n        this.watch_count =  details.watch_count;\r\n    }\r\n}","import React from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\nimport { Comment } from \"../../../../../shared/models/comment\";\r\nimport { APP_COLORS } from \"../../../../../shared/colors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Dropdown, DropdownButton, Modal } from \"react-bootstrap\";\r\nimport { WatchStatus } from \"../../../../../shared/models/watch\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\nimport { User } from \"../../../../../shared/models/user\";\r\n\r\nfunction MovieDetails(props: any): JSX.Element {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [movie, setMovie] = useState<MediaProduct>();\r\n  const [comment_content, setContent] = useState(\"\");\r\n  const [comments, setComments] = useState<Comment[]>([]);\r\n  const [commentError, setCommentError] = useState('');\r\n  const [updateScreen, setUpdateScreen] = useState(0)\r\n  const [found, setFound] = useState<boolean>(true);\r\n  const [watchStatus, setWatchStatus] = useState<WatchStatus>();\r\n  const [firstWatch, setFirstWatch] = useState(true)\r\n  let firstWatchRef = useRef<boolean>(firstWatch);\r\n  const [replyTo, setReplyTo] = useState('');\r\n  const [replyToUser, setReplyToUser] = useState('');\r\n  const [replyContent, setReplyContent] = useState('');\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (Cache.getCurrentUser()) {\r\n      const options: RequestInit = {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n      if (props.match.params.id) {\r\n        fetch(\r\n          `http://localhost:5000/media/${props.match.params.id}`,\r\n          options\r\n        ).then((res) => {\r\n          res.json().then((result) => {\r\n            if (result.failed) {\r\n              if (result.code == 403) {\r\n                setFound(false)\r\n              }\r\n            } else if (result.success) {\r\n              let product = result.data;\r\n              console.log(product);\r\n              let movie = new MediaProduct(product);\r\n              console.log(movie);\r\n              setMovie(movie);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      fetch(\r\n        `http://localhost:5000/comments/${props.match.params.id}`,\r\n        options\r\n      ).then((res) => {\r\n        res.json().then((result) => {\r\n          console.log('comment result ', result)\r\n          if (result.failed) {\r\n            console.log('failed to comment')\r\n          } else if (result.success) {\r\n            let comments = result.data.map(\r\n              (comment: any) => new Comment(comment)\r\n            );\r\n            console.log('set comments ', comments)\r\n            setComments(comments);\r\n          }\r\n        });\r\n      });\r\n\r\n      fetch(\r\n        `http://localhost:5000/watch/${Cache.getCurrentUser()?.username}/${props.match.params.id}`,\r\n        options\r\n      ).then((res) => {\r\n        res.json().then((result) => {\r\n          if (result.failed) {\r\n          } else if (result.success) {\r\n            console.log('result data ', result.data)\r\n            if (result.data) {\r\n              console.log('setting to false')\r\n              setFirstWatch(false)\r\n              setWatchStatus(new WatchStatus(result.data))\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function likeMovie() {\r\n    //like movie\r\n  }\r\n  function dislikeMovie() {\r\n    //dislike movie\r\n  }\r\n  function watch() {\r\n    //watch movie\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username: Cache.getCurrentUser()?.username,\r\n        m_id: movie?._id,\r\n        watch_date: User.formatDateHours(new Date()),\r\n        watch_count: watchStatus?.watch_count ? watchStatus.watch_count + 1 : 1\r\n      }),\r\n    };\r\n    console.log(firstWatch)\r\n    if (firstWatch == true) {\r\n      console.log('first')\r\n      fetch(\"http://localhost:5000/new_watch\", options)\r\n        .then(res => {\r\n          res.json().then(result => {\r\n            if (result.success)\r\n              history.push(`/watch/${movie?._id}`);\r\n          })\r\n        })\r\n    } else {\r\n      fetch(\"http://localhost:5000/update_watch\", options)\r\n        .then(res => {\r\n          res.json().then(result => {\r\n            console.log('update res ', result)\r\n            if (result.success)\r\n              history.push(`/watch/${movie?._id}`);\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  function replyMovie() {\r\n    let comment: any = {};\r\n    comment.m_id = movie?._id || ''\r\n    comment.c_content = \"@\" + replyToUser + \" \" + replyContent\r\n    comment.comment_date = User.formatDate(new Date())\r\n    comment.username = Cache.getCurrentUser()?.username\r\n    comment.replied_to = replyTo\r\n\r\n    let commentObj = new Comment();\r\n    commentObj.m_id = movie?._id || ''\r\n    commentObj.c_content = \"@\" + replyToUser + \" \" + replyContent\r\n    commentObj.comment_date = new Date()\r\n    commentObj.username = Cache.getCurrentUser()?.username || ''\r\n    comment.replied_to = replyTo\r\n\r\n    setReplyContent('')\r\n    setReplyTo('')\r\n    setReplyToUser('')\r\n\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(comment)\r\n    };\r\n\r\n    setContent('')\r\n    fetch('http://localhost:5000/comment', options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          console.log('comment result ', result)\r\n          if (result.success) {\r\n            let curComments = comments\r\n            commentObj.comment_id = result.data\r\n            curComments.push(commentObj)\r\n            setComments(curComments)\r\n            let update = updateScreen\r\n            update += 1\r\n            setUpdateScreen(update)\r\n          } else {\r\n            setCommentError(result.failed)\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n  function commentMovie() {\r\n    //Comment\r\n    let comment: any = {};\r\n    comment.m_id = movie?._id || ''\r\n    comment.c_content = comment_content\r\n    comment.comment_date = User.formatDate(new Date())\r\n    comment.username = Cache.getCurrentUser()?.username\r\n\r\n    let commentObj = new Comment();\r\n    commentObj.m_id = movie?._id || ''\r\n    commentObj.c_content = comment_content\r\n    commentObj.comment_date = new Date()\r\n    commentObj.username = Cache.getCurrentUser()?.username || ''\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(comment)\r\n    };\r\n\r\n    setContent('')\r\n    fetch('http://localhost:5000/comment', options)\r\n      .then(res => {\r\n        res.json().then(result => {\r\n          console.log('comment result ', result)\r\n          if (result.success) {\r\n            let curComments = comments\r\n            commentObj.comment_id = result.data\r\n            curComments.push(commentObj)\r\n            setComments(curComments)\r\n            let update = updateScreen\r\n            update += 1\r\n            setUpdateScreen(update)\r\n            setReplyContent('')\r\n            setReplyTo('')\r\n            setReplyToUser('')\r\n          } else {\r\n            setCommentError(result.failed)\r\n          }\r\n        })\r\n      })\r\n  }\r\n  function createGroup() {\r\n    //create Group\r\n  }\r\n  function renderInner(): JSX.Element {\r\n    if (found) {\r\n      return (\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            backgroundColor: \"#333333\",\r\n          }}\r\n        >\r\n          <button style={{ backgroundColor: 'transparent', width: 100, borderWidth: 0, color: 'white' }} onClick={() => history.replace('/app')}>\r\n            Go back\r\n          </button>\r\n          <img\r\n            style={{ margin: 20, flex: 1 }}\r\n            src=\"https://i.pinimg.com/564x/9c/4e/41/9c4e413ee194ff1ffc1d7bf3dbb3f3d2.jpg\"\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <h1 style={{ textAlign: \"start\", color: \"white\", margin: 20 }}>\r\n                {movie?.name}\r\n              </h1>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Button\r\n                  style={styles.nextButton}\r\n                  onClick={likeMovie}\r\n                  variant=\"danger\"\r\n                >\r\n                  like\r\n                </Button>\r\n                <Button\r\n                  style={styles.nextButton}\r\n                  onClick={dislikeMovie}\r\n                  variant=\"danger\"\r\n                >\r\n                  dislike\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n              <h1 style={{ color: \"white\", margin: 20 }}>\r\n                Score: {movie?.score}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <p style={{ marginLeft: 20, color: \"white\" }}>\r\n              {movie?.description}\r\n            </p>\r\n            <p style={{ marginLeft: 20, color: \"white\" }}>\r\n              Producer: {movie?.publisher}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <DropdownButton\r\n              variant=\"danger\"\r\n              className=\".transparent-button\"\r\n              style={styles.nameButton}\r\n              id=\"dropdown-basic-button\"\r\n              title=\"Start Watching\" /** TODO: change into user.fullname */\r\n            >\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  watch();\r\n                }}\r\n              >\r\n                Start\r\n              </Dropdown.Item>\r\n              <Dropdown.Item\r\n                onClick={() => {\r\n                  createGroup();\r\n                  handleShow();\r\n                }}\r\n              >\r\n                Create Group\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n            <Modal\r\n              show={show}\r\n              onHide={handleClose}\r\n              backdrop=\"static\"\r\n              keyboard={false}\r\n            >\r\n              <Modal.Body\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: 24 }}>Here is id for your group:</p>\r\n                <p style={{ fontSize: 24, fontWeight: \"bold\" }}> 000000 </p>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                  Close\r\n                </Button>\r\n                <Button variant=\"danger\">Got it!</Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <Form.Group controlId=\"formBasicEmail\" style={{ margin: 20 }}>\r\n              <Form.Label></Form.Label>\r\n              <Form.Control\r\n                onChange={(event) => setContent(event.target.value)}\r\n                value={comment_content}\r\n                type=\"text\"\r\n                placeholder=\"comment\"\r\n              />\r\n              {\r\n                commentError && (\r\n                  <p style={{ color: 'red' }}>{commentError}</p>\r\n                )\r\n              }\r\n            </Form.Group>\r\n            <Button\r\n              style={styles.nextButton}\r\n              onClick={commentMovie}\r\n              variant=\"danger\"\r\n            >\r\n              post comment\r\n            </Button>\r\n          </div>\r\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h4 style={{ color: \"white\", margin: 20 }}>Comments</h4>\r\n            {comments.map((comment) => {\r\n              console.log('rendering comment ', comment)\r\n              return (\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"flex-start\",\r\n                    justifyContent: \"center\",\r\n                    margin: 20,\r\n                    backgroundColor: \"gray\",\r\n                    padding: 10,\r\n                    borderRadius: 10,\r\n                    marginLeft: comment.replied_to ? 25 : 20\r\n                  }}\r\n                >\r\n                  <p style={{ color: \"blue\" }}>{comment.username + \" \" + User.formatDate(comment.comment_date)}</p>\r\n                  <p style={{ color: \"white\" }}>{comment.c_content}</p>\r\n                  {\r\n                    replyTo == comment.comment_id && comment.comment_id ? (\r\n                      <div>\r\n                        <input onChange={(e) => setReplyContent(e.target.value)} value={replyContent} placeholder='Write reply' />\r\n                        <Button onClick={() => replyMovie()} variant='primary'>Submit Reply</Button>\r\n                      </div>\r\n                    ) : (\r\n                        <Button onClick={() => {\r\n                          setReplyToUser(comment.username)\r\n                          setReplyTo(comment.comment_id)\r\n                        }} variant='primary'>Reply</Button>\r\n                      )\r\n                  }\r\n                </div>\r\n              )\r\n            }\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 style={{ margin: 40 }}>FILM NOT FOUND</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  return <div>{renderInner()}</div>;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    color: APP_COLORS.red,\r\n    marginTop: \"5%\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    width: \"90%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: \"#E0CCCC\",\r\n    borderWidth: 4,\r\n    borderColor: \"#EA9999\",\r\n    borderStyle: \"solid\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"5%\",\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  blackText: {\r\n    color: APP_COLORS.darkGray,\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n  },\r\n  nextButton: {\r\n    width: \"25%\",\r\n    minWidth: 240,\r\n    margin: 20,\r\n  },\r\n  button: {\r\n    alignSelf: \"flex-start\",\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    textDecoration: \"underline\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  nameButton: {\r\n    backgroundColor: \"transparent\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    margin: 20,\r\n  },\r\n};\r\n\r\nexport default MovieDetails;\r\n","import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from \"constants\";\r\nimport React from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { MediaProduct } from \"../../../../../shared/models/media-product\";\r\nimport { WatchStatus } from \"../../../../../shared/models/watch\";\r\nimport { Comment } from \"../../../../../shared/models/comment\";\r\nimport { APP_COLORS } from \"../../../../../shared/colors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Form, Dropdown, DropdownButton, ProgressBar } from \"react-bootstrap\";\r\nimport { finished } from \"stream\";\r\nimport { Cache } from \"../../../../../shared/libs/cache\";\r\n\r\nfunction Watch(props: any): JSX.Element {\r\n  const [movie, setMovie] = useState<MediaProduct>();\r\n  const [watchStatus, setWatchStatus] = useState<WatchStatus>();\r\n  const [message, setMessage] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (Cache.getCurrentUser()) {\r\n      const options: RequestInit = {\r\n        method: \"GET\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      };\r\n      if (props.match.params.id) {\r\n        fetch(\r\n          `http://localhost:5000/media/${props.match.params.id}`,\r\n          options\r\n        ).then((res) => {\r\n          res.json().then((result) => {\r\n            if (result.success) {\r\n              let product = result.data;\r\n              console.log('product ', product);\r\n              let movie = new MediaProduct(product);\r\n              console.log(movie);\r\n              setMovie(movie);\r\n            }\r\n          });\r\n        });\r\n        fetch(\r\n          `http://localhost:5000/watch/${Cache.getCurrentUser()?.username}/${props.match.params.id}`,\r\n          options\r\n        ).then((res) => {\r\n          res.json().then((result) => {\r\n            if (result.success) {\r\n              console.log('result data ', result.data)\r\n              if (result.data) {\r\n                console.log('setting to false')\r\n                setWatchStatus(new WatchStatus(result.data))\r\n                if (result.data.watch_count >= 3) {\r\n                  setMessage(\"You have finished watching\")\r\n                } else {\r\n                  setMessage(\"Watching in progress\")\r\n                }\r\n              }\r\n            }\r\n          });\r\n        })\r\n      }\r\n    }\r\n  }, []);\r\n  function renderInner(): JSX.Element {\r\n\r\n    return (\r\n      <div style={{ flex: 1, height: '100%', padding: 40, backgroundColor: '#333333' }}>\r\n        <h1 style={{ padding: 40, color: 'red' }}>\r\n          You are Watching {movie?.name}\r\n        </h1>\r\n        <ProgressBar now={watchStatus?.watch_count} max={3} />\r\n        <h1 style={{ margin: 40, color: 'white' }}>\r\n          {message}\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>{renderInner()}</div>;\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: \"100%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"#DDDDDD\",\r\n    paddingBottom: 20,\r\n  },\r\n  header: {\r\n    color: APP_COLORS.red,\r\n    marginTop: \"5%\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    width: \"90%\",\r\n    marginHorizontal: \"5%\",\r\n    backgroundColor: \"#E0CCCC\",\r\n    borderWidth: 4,\r\n    borderColor: \"#EA9999\",\r\n    borderStyle: \"solid\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"5%\",\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  blackText: {\r\n    color: APP_COLORS.darkGray,\r\n  },\r\n  contentContainer: {\r\n    display: \"flex\",\r\n  },\r\n  nextButton: {\r\n    width: \"25%\",\r\n    minWidth: 240,\r\n    margin: 20,\r\n  },\r\n};\r\n\r\nexport default Watch;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { FaHandMiddleFinger } from \"react-icons/fa\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Channel } from \"../../../shared/models/channel\";\r\nimport { MediaProduct } from \"../../../shared/models/media-product\";\r\n\r\nimport { APP_COLORS } from \"../../../shared/colors\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Suggestions( props: any ): JSX.Element {\r\n\r\n  const history = useHistory();\r\n  const [channelID, setChannelID] = useState(\"\");\r\n  const [lastMovie, setLastMovie] = useState<MediaProduct>();\r\n  const [selfChannel, setChannelName] = useState<Channel>();\r\n\r\n  useEffect(() => {\r\n    let mediaProduct1 = new MediaProduct({\r\n      _id: \"id1\",\r\n      score: 5,\r\n      release_date: new Date(),\r\n      name: \"Kung Fu Panda\",\r\n      thumbnail_url: \"https://img1.evosis.org/movie/629/icon/icon0.png\",\r\n    });\r\n    let mediaProduct2 = new MediaProduct({\r\n      _id: \"id2\",\r\n      score: 5,\r\n      release_date: new Date(),\r\n      name: \"Inception\",\r\n      thumbnail_url:\r\n        \"https://bsaber.com/wp-content/uploads/2019/05/18598-20226.jpg\",\r\n    });\r\n    let mediaProduct3 = new MediaProduct({\r\n      _id: \"id3\",\r\n      score: 4.7,\r\n      release_date: new Date(),\r\n      name: \"Tenet\",\r\n      thumbnail_url:\r\n        \"https://images.pexels.com/users/avatars/3485071/watch-online-tenet-2020-free-hd-full-movie-969.jpeg?w=256&h=256&fit=crop&auto=compress\",\r\n    });\r\n    let channel2 = new Channel({\r\n      _id: \"id2\",\r\n      name: \"Beyin Yakanlar\",\r\n      medias: [mediaProduct1, mediaProduct2, mediaProduct3, mediaProduct3],\r\n    });\r\n\r\n    setChannelID(channelID);\r\n    setChannelName(channel2);\r\n    setLastMovie(mediaProduct3);\r\n  }, []);\r\n\r\n  function onMoviePressed(media: MediaProduct): void {}\r\n\r\n  return (\r\n    <div className=\"fill-window\" style={styles.container}>\r\n      <div\r\n        style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"left\" }}\r\n      >\r\n        <button\r\n          style={{\r\n            marginLeft: 12,\r\n            border: 0,\r\n            backgroundColor: \"transparent\",\r\n            display: \"flex\",\r\n            alignItems: \"flex-start\",\r\n            outline: \"None\",\r\n          }}\r\n\r\n          onClick={() => {\r\n            history.replace(\"/channel/:id\");\r\n          }}\r\n        \r\n        >\r\n          <p\r\n            style={{\r\n              color: \"white\",\r\n              textDecoration: \"underline\",\r\n              alignSelf: \"left,\",\r\n            }}\r\n          >\r\n            {\" \"}\r\n            {\"<<\" + selfChannel?.name}\r\n          </p>\r\n        </button>\r\n        <div\r\n          style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"left\" }}\r\n        >\r\n          {selfChannel?.medias.map((media) => (\r\n            <button style={styles.button} onClick={() => onMoviePressed(media)}>\r\n              <img style={{ width: 128, height: 128 }} src={media.thumbnail_url} />\r\n            </button>\r\n          ))}\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    backgroundColor: \"#333333\",\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 24,\r\n  },\r\n  channelContainer: {\r\n    flex: 1,\r\n    maxHeight: 180,\r\n  },\r\n  channelName: {\r\n    color: \"white\",\r\n    margin: 0,\r\n  },\r\n  thumbnailStyle: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  button: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n  },\r\n  continueWatch: {\r\n    display: \"flex\",\r\n    height: 180,\r\n  },\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Suggestions;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Reports from \"./pages/landing/reports/index\";\r\nimport Header from \"./pages/landing/header\";\r\nimport About from \"./pages/landing/about\";\r\nimport Team from \"./pages/landing/team\";\r\nimport Design from \"./pages/landing/reports/design\";\r\nimport Proposal from \"./pages/landing/reports/proposal\";\r\nimport Home from \"./pages/app/home\";\r\nimport Login from \"./pages/app/login\";\r\nimport Register from \"./pages/app/register\";\r\nimport Channel from \"./pages/app/channel\";\r\nimport MovieDetails from \"./pages/app/home/main/product-details\";\r\nimport Watch from \"./pages/app/home/main/watch\";\r\nimport Suggestions from \"./pages/app/suggestions\";\r\n\r\nfunction App(): JSX.Element {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texcat path='/app'\r\n\t\t\t\t\tcomponent={Home}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact path='/browse/:id'\r\n\t\t\t\t\tcomponent={MovieDetails}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texact path='/watch/:id'\r\n\t\t\t\t\tcomponent={Watch}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texcat path='/login'\r\n\t\t\t\t\tcomponent={Login}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texcat path='/register'\r\n\t\t\t\t\tcomponent={Register}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route\r\n\t\t\t\t\texcat path='/channel/:id'\r\n\t\t\t\t\tcomponent={Channel}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route exact path=\"/channel/:id/suggestions\" component={Suggestions} />\r\n\t\t\t\t<Route path=''>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<About />\r\n\t\t\t\t\t<Team />\r\n\t\t\t\t\t<Reports />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App.tsx\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}